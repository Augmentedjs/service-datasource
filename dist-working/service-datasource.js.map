{"version":3,"sources":["webpack://servicedatasource/webpack/bootstrap","webpack://servicedatasource/./src/datasource.js","webpack://servicedatasource/./src/datasourceFactory.js","webpack://servicedatasource/./src/datasourceStyle.js","webpack://servicedatasource/./src/index.js","webpack://servicedatasource/./src/memoryDataSource.js","webpack://servicedatasource/./src/mongoDataSource.js","webpack://servicedatasource/./src/solrDataSource.js"],"names":["DataSource","constructor","client","style","url","connected","DATASOURCE_STYLE","DATABASE","_client","_db","_collection","getConnection","closeConnection","insert","data","remove","update","query","callback","collection","name","DataSourceFactory","getDatasource","type","Type","MONGODB","MongoDataSource","SOLR","SOLRDataSource","MEMORY","MemoryDataSource","Symbol","SEARCH","module","exports","setCollection","Augmented","isString","ret","myQuery","isFunction","obj","da","Error","that","connect","err","db","close","find","toArray","results","Array","isArray","insertMany","result","insertOne","ping"],"mappings":"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","file":"service-datasource.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import DATASOURCE_STYLE from \"./datasourceStyle.js\";\n\n/**\n * The datasource object for use as an interface for a datasource\n * @interface DataSource\n * @memberof Augmented.Service\n */\nclass DataSource {\n    constructor(client, style, url) {\n      this.connected = false;\n      this.style = (style) ? style : DATASOURCE_STYLE.DATABASE;\n      this._client = (client) ? client : null;\n      this.url = (url) ? url : \"\";\n      this._db = null;\n      this._collection = null;\n    };\n\n  /**\n   * @property {object} client The client for use in the DataSource\n   * @memberof Augmented.Service.DataSource\n   */\n\n  /**\n   * @property {string} url The url for the datasource (if applicable)\n   * @memberof Augmented.Service.DataSource\n   */\n\n  /**\n   * @property {object} db The database (or simular) for the datasource (if applicable)\n   * @memberof Augmented.Service.DataSource\n   */\n\n  /**\n   * @property {object} collection The collection for use in the DataSource\n   * @memberof Augmented.Service.DataSource\n   */\n\n  /**\n   * @method getConnection Get a connection to the DataSource\n   * @memberof Augmented.Service.DataSource\n   * @returns {boolean} Returns true if a connection is established\n   */\n  getConnection() {\n    return false;\n  };\n  /**\n   * @method closeConnection Close a connection to the DataSource (depending on type may not be needed)\n   * @memberof Augmented.Service.DataSource\n   * @returns {boolean} Returns true if a connection is established\n   */\n  closeConnection() {};\n  /**\n   * @method insert Insert data\n   * @memberof Augmented.Service.DataSource\n   * @param {object} data Data to insert\n   */\n  insert(data) {\n  };\n  /**\n   * @method remove Remove data\n   * @memberof Augmented.Service.DataSource\n   * @param {object} data Data to remove\n   */\n  remove(data) {\n  };\n  /**\n   * @method update Update data\n   * @memberof Augmented.Service.DataSource\n   * @param {object} data Data to update\n   */\n  update(data) {};\n  /**\n   * @method query Query data\n   * @memberof Augmented.Service.DataSource\n   * @param {object} query The query object\n   * @param {function} callback A callback to execute during the query\n   * @returns {object} Returns a value from the query or response code\n   */\n  query(query, callback) {\n    return null;\n  };\n  /**\n    * @method getCollection Get the collection\n    * @memberof Augmented.Service.DataSource\n    * @returns {object} Returns the collection\n    */\n  get collection() {\n    return this._collection;\n  };\n\n  /**\n   * @method setCollection Set the collection by name\n   * @memberof Augmented.Service.DataSource\n   * @param {string} name The name of the collection\n   */\n  set collection(name) {\n    this._collection = name;\n  };\n\n  /**\n    * @method getClient Get the client\n    * @memberof Augmented.Service.DataSource\n    * @returns {object} Returns the client\n    */\n  get client() {\n    return this._client;\n  };\n};\n\nexport default DataSource;\n","import MemoryDataSource from \"./memoryDataSource.js\";\nimport MongoDataSource from \"./mongoDataSource.js\";\nimport SOLRDataSource from \"./solrDataSource.js\";\n\n/**\n * The datasource factory to return an instance of a datasource configured by type\n * @namespace DataSourceFactory\n * @memberof Augmented.Service\n */\nclass DataSourceFactory {\n  constructor() {\n  };\n  static getDatasource(type, client) {\n    if (type === DataSourceFactory.Type.MONGODB) {\n      return new MongoDataSource(client);\n    } else if (type === DataSourceFactory.Type.SOLR) {\n      return new SOLRDataSource(client);\n    } else if (type === DataSourceFactory.Type.MEMORY) {\n      return new MemoryDataSource();\n    }\n    return null;\n  };\n};\n\nDataSourceFactory.Type = {};\nDataSourceFactory.Type.MEMORY = Symbol(\"memory\");\nDataSourceFactory.Type.MONGODB = Symbol(\"mongodb\");\nDataSourceFactory.Type.SOLR = Symbol(\"solr\");\n\nexport default DataSourceFactory;\n","const DATASOURCE_STYLE = {};\nDATASOURCE_STYLE.DATABASE = Symbol(\"database\");\nDATASOURCE_STYLE.MEMORY = Symbol(\"memory\");\nDATASOURCE_STYLE.SEARCH = Symbol(\"search\");\n\nexport default DATASOURCE_STYLE;\n","import DataSource from \"./datasource.js\";\nimport DATASOURCE_STYLE from \"./datasourceStyle.js\";\nimport MemoryDataSource from \"./memoryDataSource.js\";\nimport MongoDataSource from \"./mongoDataSource.js\";\nimport SOLRDataSource from \"./solrDataSource.js\";\nimport DataSourceFactory from \"./datasourceFactory.js\";\n\nmodule.exports.DataSource = DataSource;\nmodule.exports.DATASOURCE_STYLE = DATASOURCE_STYLE;\nmodule.exports.MemoryDataSource = MemoryDataSource;\nmodule.exports.MongoDataSource = MongoDataSource;\nmodule.exports.SOLRDataSource = SOLRDataSource;\nmodule.exports.DataSourceFactory = DataSourceFactory;\n","import DataSource from \"./datasource.js\";\nimport DATASOURCE_STYLE from \"./datasourceStyle.js\";\n\nclass MemoryDataSource extends DataSource {\n  constructor() {\n    super(null, DATASOURCE_STYLE.MEMORY, null);\n    this._db = {};\n  };\n\n  getConnection(url, collection) {\n    this.connected = true;\n    if (collection) {\n      this._collection = collection;\n    }\n\n    this.url = url;\n\n    return true;\n  };\n\n  closeConnection() {\n    if (this._db && this.connected) {\n      this.connected = false;\n      this._db = null;\n      this._collection = null;\n    }\n  };\n\n  setCollection(name) {\n    if (name && Augmented.isString(name)) {\n      this._collection = name;\n      this._db[this._collection] = {};\n    }\n  };\n\n  query(query, callback) {\n    let ret = {};\n    if (this._collection && this.connected) {\n      //debug(\"The query: \" + query);\n      let myQuery = query;\n      if (Augmented.isFunction(query)) {\n        myQuery = query();\n      }\n      const obj = this._db[this._collection];\n      ret = obj[myQuery];\n      if (callback) {\n        callback(ret);\n      }\n    }\n    return ret;\n  };\n\n  insert(data, callback) {\n    let ret = {};\n    if (this._collection && this.connected) {\n      const obj = this._db[this._collection];\n      obj[this._collection] = data;\n      ret = data;\n      if (callback) {\n        callback(da);\n      }\n    } else {\n      throw new Error(\"no collection defined or not connected.\");\n    }\n    return ret;\n  };\n};\n\nexport default MemoryDataSource;\n","import DataSource from \"./datasource.js\";\nimport DATASOURCE_STYLE from \"./datasourceStyle.js\";\n\n// const debug = (message) => {\n//   console.debug(message);\n// };\n\n/**\n * The MongoDB datasource instance class\n * @extends DataSource\n */\nclass MongoDataSource extends DataSource {\n  constructor(client) {\n    super(client, DATASOURCE_STYLE.DATABASE, null);\n  };\n\n  setCollection(name) {\n    //debug(\"setCollection: \" + name);\n    if (name && Augmented.isString(name)) {\n      //debug(\"collection: \" + name);\n      this._collection = this._db.collection(name);\n    } //else {\n      //    debug(\"no collection set\");\n      //}\n  };\n\n  getConnection(url, collection) {\n    this.connected = false;\n    let that = this;\n    if (this.client && !this.connected) {\n\n      // unclear if the client supports arrow functions\n      this._client.connect(url, (err, db) => {\n        if(!err) {\n          if (collection) {\n            //debug(\"getConnection: collection: \" + collection);\n            that._collection = db.collection(collection);\n          } //else {\n            //debug(\"getConnection: no collection\");\n            //}\n          that._db = db;\n          that.url = url;\n          that.connected = true;\n          that.style = DATASOURCE_STYLE.DATABASE;\n        } else {\n          throw new Error(err);\n        }\n      });\n      return true;\n    } else {\n      throw new Error(\"No client was passed.\");\n      //logger.error(\"no client was passed.\");\n    }\n    return false;\n  };\n\n  closeConnection() {\n    if (this._db && this.connected) {\n      this._db.close();\n      this.connected = false;\n      this._db = null;\n      this._collection = null;\n    }\n  };\n\n  query(query, callback) {\n    let ret = {};\n    if (this._collection && this.connected) {\n      //debug(\"The query: \" + query);\n      let myQuery = query;\n      if (Augmented.isFunction(query)) {\n        myQuery = query();\n      }\n      // unclear if the client supports arrow functions\n      this._collection.find(myQuery).toArray( (err, results) => {\n        if(!err) {\n          //debug(\"Results: \" + JSON.stringify(results));\n\n          if (results) {\n            ret = results;\n          }\n          if (callback) {\n            callback(ret);\n          } else {\n            //debug(\"MongoDatasource, no callback\");\n          }\n        } else {\n          throw new Error(err);\n        }\n      });\n    } else {\n      throw new Error(\"no collection defined or not connected to db.\");\n      //logger.error(\"no collection defined or not connected to db.\");\n    }\n    //debug(\"ret: \" + JSON.stringify(ret));\n    return ret;\n  };\n\n  insert(data, callback) {\n    let ret = {};\n    if (this._collection && this.connected) {\n      if (Array.isArray(data)) {\n        // unclear if the client supports arrow functions\n        this._collection.insertMany(data, (err, result) => {\n          if(!err) {\n            //debug(\"Result: \" + JSON.stringify(result));\n            if (result) {\n              ret = result;\n              if (callback) {\n                callback(ret);\n              }\n            }\n          } else {\n            throw new Error(err);\n          }\n        });\n      } else {\n        // unclear if the client supports arrow functions\n        this._collection.insertOne(data, (err, result) => {\n          if(!err) {\n            //debug(\"Result: \" + JSON.stringify(result));\n            if (result) {\n              ret = result;\n              if (callback) {\n                callback(ret);\n              }\n            }\n          } else {\n            throw new Error(err);\n          }\n        });\n      }\n    } else {\n      throw new Error(\"no collection defined or not connected to db.\");\n      //logger.error(\"no collection defined or not connected to db.\");\n    }\n    //debug(\"ret: \" + JSON.stringify(ret));\n    return ret;\n  };\n\n  update(query, data, callback) {\n    if (this._collection && this.connected) {\n      //debug(\"The query: \" + query);\n      let myQuery = query;\n      if (Augmented.isFunction(query)) {\n        myQuery = query();\n      }\n      // unclear if the client supports arrow functions\n      this.collection.update(myQuery, data, (err, result) => {\n        if(!err) {\n          //debug(\"Result: \" + JSON.stringify(result));\n        } else {\n          throw new Error(err);\n        }\n      });\n\n      if (callback) {\n        callback(data);\n      }\n    } else {\n      throw new Error(\"no collection defined or not connected to db.\");\n      //logger.error(\"no collection defined or not connected to db.\");\n    }\n    return data;\n  };\n\n  remove(query, callback) {\n    let ret = {};\n    if (this._collection && this.connected) {\n      //debug(\"The query: \" + query);\n      let myQuery = query;\n      if (Augmented.isFunction(query)) {\n        myQuery = query();\n      }\n      // unclear if the client supports arrow functions\n      this.collection.remove(myQuery, (err, results) => {\n        if(!err) {\n          if (callback) {\n            callback();\n          }\n        } else {\n          throw new Error(err);\n        }\n      });\n    } else {\n      throw new Error(\"no collection defined or not connected to db.\");\n      //logger.error(\"no collection defined or not connected to db.\");\n    }\n    return ret;\n  };\n};\n\nexport default MongoDataSource;\n","import DataSource from \"./datasource.js\";\nimport DATASOURCE_STYLE from \"./datasourceStyle.js\";\n\n/**\n * The SOLR datasource instance class - WIP\n * @constructor SOLRDataSource\n * @implements {Augmented.Service.DataSource}\n * @augments Augmented.Service.DataSource\n * @memberof Augmented.Service\n */\nclass SOLRDataSource extends DataSource {\n  constructor(client) {\n    super(client, DATASOURCE_STYLE.DATABASE, null);\n  };\n\n  getConnection(url, collection) {\n    this.connected = false;\n    let that = this;\n    if (this._client && !this.connected) {\n      this._client.ping((err, db) =>{\n        if(!err) {\n          //logger.debug(\"collection: \" + collection);\n          that._collection = collection;\n          that._db = db;\n          that.url = url;\n          that.connected = true;\n          that.style = DATASOURCE_STYLE.SEARCH;\n        } else {\n          throw new Error(err);\n        }\n      });\n    } else {\n      throw new Error(\"No client was passed.\");\n    }\n    return this.connected;\n  };\n\n  closeConnection() {\n    if (this._db && this.connected) {\n      this.connected = false;\n      this._db = null;\n      this._collection = null;\n    }\n  };\n\n  query(query, callback) {\n    let ret = {};\n\n    return ret;\n  };\n\n  insert(data, callback) {\n    let ret = {};\n\n    return ret;\n  };\n\n  update(query, data, callback) {\n\n    return data;\n  };\n\n  remove(query, callback) {\n    let ret = {};\n\n    return ret;\n  };\n};\n\nexport default SOLRDataSource;\n"],"sourceRoot":""}